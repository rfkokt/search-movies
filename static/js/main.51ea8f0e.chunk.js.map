{"version":3,"sources":["Component/Poster/index.js","Component/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["Poster","liatDetail","item","detailFilm","imdbID","axios","get","then","res","data","console","log","setState","Plot","Director","Writer","Actor","Actors","Runtime","Language","Date","Released","Rating","imdbRating","PosterDetail","TitleDetail","Title","Genre","show","state","handleClose","bind","this","Container","Row","props","listFilm","map","key","Col","xs","span","offset","sm","md","lg","style","marginBottom","Card","width","Img","variant","src","height","Body","Text","Year","className","Type","Button","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Image","rounded","textIndent","fontSize","fontWeight","Footer","Component","index","Film","Search","cariFilm","nameFilm","Jumbotron","marginTop","Form","Group","Control","onChange","e","target","value","type","placeholder","App","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.51ea8f0e.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Card, Button, Row, Col, Modal, Image, Container} from \"react-bootstrap\";\nimport axios from 'axios'\n\nclass Poster extends Component {\n    constructor() {\n        super();\n        this.state = {\n            show: false\n        }\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n\n    liatDetail = (item) => {\n        const detailFilm = item.imdbID\n        axios\n            .get(`https://www.omdbapi.com/?i=${detailFilm}&apikey=176c65e1`)\n            .then(res => {\n                const data = res.data\n                console.log(data)\n                this.setState({\n                    Plot: data.Plot,\n                    Director: data.Director,\n                    Writer: data.Writer,\n                    Actor: data.Actors,\n                    Runtime: data.Runtime,\n                    Language: data.Language,\n                    Date: data.Released,\n                    Rating: data.imdbRating,\n                    PosterDetail: data.Poster,\n                    TitleDetail: data.Title,\n                    Genre: data.Genre,\n                    show: true\n                }, () => console.log('hai', this.state.PosterDetail))\n            })\n    }\n\n    handleClose() {\n        this.setState({\n            show: false\n        })\n    }\n\n    render() {\n        const {show, Plot, Director, Writer, Actor, Runtime, Language, Date, Rating, Genre, TitleDetail, PosterDetail} = this.state;\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        {this.props.listFilm.map((item, key) =>\n                            <Col xs={{span : 10, offset:2}} sm={{span : 10, offset:2}} md={{span : 6, offset:0}} lg={{span : 4, offset:0}} style={{marginBottom: '20px'}}>\n                                <Card style={{width: '18rem'}}>\n                                    <Card.Img variant=\"top\" key={key.item}\n                                              src={item.Poster === \"N/A\" ? 'https://images.unsplash.com/photo-1584824486516-0555a07fc511?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80' : item.Poster}\n                                              height={300}/>\n                                    <Card.Body>\n                                        <Card.Title>{item.Title}</Card.Title>\n                                        <Card.Text>\n                                            <div>\n                                                <p>{item.Year}</p>\n                                                <p className={\"text-uppercase\"}>{item.Type}</p>\n                                            </div>\n\n                                        </Card.Text>\n                                        <Button variant=\"primary\" onClick={this.liatDetail.bind(this, item)}>See\n                                            Detail</Button>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )}\n                    </Row>\n                </Container>\n                <Modal\n                    show={show}\n                    onHide={this.handleClose}\n                    backdrop=\"static\"\n                    keyboard={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title>{TitleDetail}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div>\n                            <div className={'text-center'}>\n                                <Image\n                                    src={PosterDetail === \"N/A\" ? 'https://images.unsplash.com/photo-1584824486516-0555a07fc511?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80' : PosterDetail}\n                                    width={400} rounded/>\n                            </div>\n                            <br/>\n                            <h4>Storyline</h4>\n                            <p style={{textIndent: \"50px\", marginBottom: '15px'}}>{Plot}</p>\n                        </div>\n                        <div>\n                            <h4>Details</h4>\n                            <h1 style={{fontSize: \"14px\", fontWeight: 'bold'}}>Director : <span\n                                style={{fontWeight: 'normal'}}>{Director}</span></h1>\n                            <h1 style={{fontSize: \"14px\", fontWeight: 'bold'}}>Writer : <span\n                                style={{fontWeight: 'normal'}}>{Writer}</span></h1>\n                            <h1 style={{fontSize: \"14px\", fontWeight: 'bold'}}>Actors : <span\n                                style={{fontWeight: 'normal'}}>{Actor}</span></h1>\n                            <h1 style={{fontSize: \"14px\", fontWeight: 'bold'}}>Genre : <span\n                                style={{fontWeight: 'normal'}}>{Genre}</span></h1>\n                            <h1 style={{fontSize: \"14px\", fontWeight: 'bold'}}>Release Date : <span\n                                style={{fontWeight: 'normal'}}>{Date}</span></h1>\n                            <h1 style={{fontSize: \"14px\", fontWeight: 'bold'}}>Rating IMDb : <span\n                                style={{fontWeight: 'normal'}}>{Rating}</span></h1>\n                            <h1 style={{fontSize: \"14px\", fontWeight: 'bold'}}>Runtime : <span\n                                style={{fontWeight: 'normal'}}>{Runtime}</span></h1>\n                            <h1 style={{fontSize: \"14px\", fontWeight: 'bold'}}>Language : <span\n                                style={{fontWeight: 'normal'}}>{Language}</span></h1>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Poster","import React, {Component} from \"react\";\nimport {Jumbotron, Form, Container, Row, Col, Button} from \"react-bootstrap\";\nimport './style.css'\nimport Poster from \"../Poster\";\nimport axios from 'axios'\n\nclass index extends Component {\n    constructor() {\n        super();\n        this.state = {\n            listFilm : []\n        }\n    }\n\n    componentDidMount() {\n        this.Film()\n    }\n\n    Film = () => {\n        axios.get(`https://www.omdbapi.com/?s=indonesia&apikey=176c65e1`)\n            .then(res => {\n                console.log(res.data.Search)\n                this.setState({\n                    listFilm : res.data.Search\n                })\n            })\n    }\n    cariFilm = () => {\n        const nameFilm = this.state.nameFilm\n        axios.get(`https://www.omdbapi.com/?s=${nameFilm}&apikey=176c65e1`)\n            .then(res => {\n                console.log(res.data.Search)\n                this.setState({\n                    listFilm : res.data.Search\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <Jumbotron className='background-jumbotron'>\n                    <div className={\"text-white\"}>\n                        <h1 style={{marginTop: '100px'}}>Search Your Movies</h1>\n                        <p>\n                            Find <span style={{fontWeight: 'bold'}}>rating</span> movie you want with one click!\n                        </p>\n                        <Container>\n                            <Row className={'justify-content-md-center'} style={{marginTop: '100px'}}>\n                                <Col xs={8} lg={'4'}>\n                                    <Form.Group>\n                                        <Form.Control onChange={(e) => {\n                                            this.setState({\n                                                nameFilm: e.target.value\n                                            })\n                                        }} type=\"text\" placeholder=\"Search your movies...\"/>\n                                    </Form.Group>\n                                </Col>\n                                <Col xs={4} lg={'1'}>\n                                    <Button onClick={this.cariFilm}>Search</Button>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </Jumbotron>\n                <Container>\n                    <Poster listFilm={this.state.listFilm}/>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default index","import React from 'react';\nimport Home from './Component/Home/index'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}